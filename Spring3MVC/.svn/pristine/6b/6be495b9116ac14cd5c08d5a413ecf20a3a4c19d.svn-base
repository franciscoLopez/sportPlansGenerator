package com.project.model;

import java.util.List;

import javax.persistence.Entity;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.project.util.Tabla;

@Entity
@Table(name = Tabla.SPORT_CENTRE)
@Inheritance(strategy = InheritanceType.JOINED)
public class SportCentre extends User {

	private static final long serialVersionUID = 1L;

	// Constantes para referencias externas a atributos con hibernate.
	public static final String A_NAME = "name";


	private String name;

	@OneToOne
	@JoinColumn(name = "contactInfo_id")
	private ContactInfo contactInfo;

	@OneToMany(mappedBy = "sportCenter")
	private List<SportTrainer> sportTrainers;

	@OneToMany(mappedBy = "customerSportCenter")
	private List<Customer> customers;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public ContactInfo getContactInfo() {
		return contactInfo;
	}

	public void setContactInfo(ContactInfo contactInfo) {
		this.contactInfo = contactInfo;
	}

	public void addSportTrainer(SportTrainer sportTrainer) {
		this.getSportTrainers().add(sportTrainer);
	}

	public List<SportTrainer> getSportTrainers() {
		return sportTrainers;
	}

	public void setSportTrainers(List<SportTrainer> sportTrainers) {
		this.sportTrainers = sportTrainers;
	}

	public List<Customer> getCustomers() {
		return customers;
	}

	public void setCustomers(List<Customer> customers) {
		this.customers = customers;
	}

	public void addCustomer(Customer customer) {
		if (!this.getCustomers().contains(customer)) {
			this.getCustomers().add(customer);
		}
	}
}
