package com.project.servicios;

import java.text.Format;
import java.text.SimpleDateFormat;

import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;
import org.springframework.validation.Validator;

import com.project.dao.DAOAcceso;
import com.project.model.SportTrainer;

public class ValidarSportTrainer extends DAOAcceso implements Validator {
	
	public boolean supports(Class<?> clazz) {
		return SportTrainer.class.isAssignableFrom(clazz);
	}

	public void validate(Object target, Errors errors) {
		SportTrainer sportTrainer = (SportTrainer)target;
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "username", "etiqueta.error.username.is.required", "Error en username");
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "password", "etiqueta.error.password.is.required", "Error en password");
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "repetirPassword", "etiqueta.error.repPassword.is.required", "Error en password");
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "name", "etiqueta.error.name.is.required", "Error en nombre");
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "surName", "etiqueta.error.surname.is.required", "Error en apellidos");
		ValidationUtils.rejectIfEmptyOrWhitespace(errors, "email", "etiqueta.error.email.is.required", "Error en email");
		String patronEmail = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
		if(!sportTrainer.getEmail().matches(patronEmail)){
			errors.rejectValue(SportTrainer.A_EMAIL,"etiqueta.error.email.is.required");
		}
		String patronDate = "(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[012])/((19|20)\\d\\d)";
		Format formatter;
		formatter = new SimpleDateFormat("dd/MM/yyyy");
		String date = formatter.format(sportTrainer.getDateBirth()); 
		if(sportTrainer.getDateBirth() == null || !date.matches(patronDate)){
			errors.rejectValue(SportTrainer.A_DATE_BIRTH, "etiqueta.error.sport.trainer.date.birth.is.required");
		}		
	}

}
